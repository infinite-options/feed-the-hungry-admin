{"version":3,"sources":["components/NavBar.js","components/Charts.js","components/Filter.js","components/Donors.js","components/Table.js","components/Orders.js","components/Inventory.js","components/Customer.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","Navbar","bg","variant","className","Brand","href","Form","inline","style","width","FormControl","type","placeholder","Button","Nav","to","Component","withRouter","Charts","props","options","this","graph","chart","title","text","xAxis","categories","xaxis","yAxis","min","yaxis","plotOptions","column","pointPadding","borderWidth","series","name","showInLegend","data","plotBackgroundColor","plotBorderWidth","plotShadow","tooltip","pointFormat","accessibility","point","valueSuffix","pie","allowPointSelect","cursor","dataLabels","enabled","format","colorByPoint","subtitle","rangeDescription","legend","layout","align","verticalAlign","label","connectorAllowed","pointStart","responsive","rules","condition","maxWidth","chartOptions","highcharts","Highcharts","Filter","params","updateSearch","e","a","setState","target","value","console","log","state","update","search_c","search_d","search_f","search_st","Date","search_et","Card","margin","Row","Col","xs","Label","DropdownButton","id","size","Dropdown","Item","onClick","ddlist","map","object","onChange","Donors","componentDidMount","donordonationbyname","updateDate","start_date","end_date","temp","filter","obj","obj_date","donation_date","resp","axios","get","base","then","response","result","catch","error","sort","b","totalDonation","push","donor_first_name","mode","dd","donordonationbydate","split","foodtypes","dict","fl_type","total","Object","entries","key","y","itemdonations","fl_name","TotalDonation","changeMode","backgroundColor","padding","ToggleButtonGroup","defaultValue","ToggleButton","fontSize","Table","height","columnDefs","columns","rowData","pagination","suppressSizeToFit","defaultColDef","resizable","paginationPageSize","Orders","deliveries","delivery_date","getMonth","yearmap","1","2","3","4","5","6","7","8","9","10","11","12","Inventory","excess","updateData","fb_name","indexOf","includes","inv_qty","quantity","field","headerName","sortable","unSortIcon","low","zero","Customer","customervalue","ctm_id","Total_Value","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a2beca0c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport {Navbar, Nav, Form, FormControl, Button} from 'react-bootstrap'\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\" className=\"d-flex p-2 bd-highlight\" >\r\n                    <Navbar>\r\n                        <Navbar.Brand href=\"/\">\r\n                            Feed the Hungry\r\n                        </Navbar.Brand>\r\n                    </Navbar>\r\n                    <Form inline style={{ width: '45%' }}>\r\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                        <Button variant=\"outline-light\">Search</Button>\r\n                    </Form>\r\n                    <Nav className=\"mr-auto\" >\r\n                        <Nav>\r\n                            <Link to=\"/donors\" className=\"nav-link\">\r\n                                Donors\r\n                            </Link>\r\n                        </Nav>\r\n                        <Nav>\r\n                            <Link to=\"/orders\" className=\"nav-link\">\r\n                                Orders\r\n                            </Link>\r\n                        </Nav>\r\n                        <Nav>\r\n                            <Link to=\"/inventory\" className=\"nav-link\">\r\n                                Inventory\r\n                            </Link>\r\n                        </Nav>\r\n                        <Nav>\r\n                            <Link to=\"/customers\" className=\"nav-link\">\r\n                                Customers\r\n                            </Link>\r\n                        </Nav>\r\n                    </Nav>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(NavBar)\r\n","import React, { Component } from 'react'\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\n\r\nexport default class Charts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        var options = {}\r\n        switch (this.props.graph) {\r\n            case 'bar':\r\n                options = {\r\n                    chart: {\r\n                        type: 'column'\r\n                    },\r\n                    title: {\r\n                        text: this.props.title\r\n                    },\r\n                    xAxis: {\r\n                        categories: this.props.xaxis\r\n                    },\r\n                    yAxis: {\r\n                        min: 0,\r\n                        title: {\r\n                            text: this.props.yaxis\r\n                        }\r\n                    },\r\n                    plotOptions: {\r\n                        column: {\r\n                            pointPadding: 0.2,\r\n                            borderWidth: 0\r\n                        }\r\n                    },\r\n                    series: [{\r\n                        name: 'Share',\r\n                        showInLegend: false,\r\n                        data: this.props.data\r\n                    }]\r\n                }\r\n                break;\r\n            case 'pie':\r\n                options = {\r\n                    chart: {\r\n                        plotBackgroundColor: null,\r\n                        plotBorderWidth: null,\r\n                        plotShadow: false,\r\n                        type: 'pie'\r\n                    },\r\n                    yAxis: {\r\n                        min: 0,\r\n                        title: {\r\n                            text: ''\r\n                        }\r\n                    },\r\n                    title: {\r\n                        text: this.props.title\r\n                    },\r\n                    tooltip: {\r\n                        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n                    },\r\n                    accessibility: {\r\n                        point: {\r\n                            valueSuffix: '%'\r\n                        }\r\n                    },\r\n                    plotOptions: {\r\n                        pie: {\r\n                            allowPointSelect: true,\r\n                            cursor: 'pointer',\r\n                            dataLabels: {\r\n                                enabled: true,\r\n                                format: '<b>{point.name}</b>: {point.y}'\r\n                            }\r\n                        }\r\n                    },\r\n                    series: [{\r\n                        name: 'Share',\r\n                        colorByPoint: true,\r\n                        data: this.props.data\r\n                    }]\r\n                }\r\n                break;\r\n            case 'line':\r\n                options = {\r\n\r\n                    title: {\r\n                        text: 'Solar Employment Growth by Sector, 2010-2016'\r\n                    },\r\n\r\n                    subtitle: {\r\n                        text: 'Source: thesolarfoundation.com'\r\n                    },\r\n\r\n                    yAxis: {\r\n                        title: {\r\n                            text: 'Number of Employees'\r\n                        }\r\n                    },\r\n\r\n                    xAxis: {\r\n                        accessibility: {\r\n                            rangeDescription: 'Range: 2010 to 2017'\r\n                        }\r\n                    },\r\n\r\n                    legend: {\r\n                        layout: 'vertical',\r\n                        align: 'right',\r\n                        verticalAlign: 'middle'\r\n                    },\r\n\r\n                    plotOptions: {\r\n                        series: {\r\n                            label: {\r\n                                connectorAllowed: false\r\n                            },\r\n                            pointStart: 2010\r\n                        }\r\n                    },\r\n\r\n                    series: [{\r\n                        name: 'Installation',\r\n                        data: [43934, 52503, 57177, 69658, 97031, 119931, 137133, 154175]\r\n                    }, {\r\n                        name: 'Manufacturing',\r\n                        data: [24916, 24064, 29742, 29851, 32490, 30282, 38121, 40434]\r\n                    }, {\r\n                        name: 'Sales & Distribution',\r\n                        data: [11744, 17722, 16005, 19771, 20185, 24377, 32147, 39387]\r\n                    }, {\r\n                        name: 'Project Development',\r\n                        data: [null, null, 7988, 12169, 15112, 22452, 34400, 34227]\r\n                    }, {\r\n                        name: 'Other',\r\n                        data: [12908, 5948, 8105, 11248, 8989, 11816, 18274, 18111]\r\n                    }],\r\n\r\n                    responsive: {\r\n                        rules: [{\r\n                            condition: {\r\n                                maxWidth: 500\r\n                            },\r\n                            chartOptions: {\r\n                                legend: {\r\n                                    layout: 'horizontal',\r\n                                    align: 'center',\r\n                                    verticalAlign: 'bottom'\r\n                                }\r\n                            }\r\n                        }]\r\n                    }\r\n\r\n                }\r\n            default:\r\n                options = {}\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <HighchartsReact\r\n                    highcharts={Highcharts}\r\n                    options={options}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Row, Col, Card, Dropdown, DropdownButton, Navbar, FormControl, Form } from 'react-bootstrap'\r\n\r\n\r\nexport default class Filter extends Component {\r\n    constructor(params) {\r\n        super(params)\r\n        this.state = {\r\n            search_c: '',\r\n            search_d: '',\r\n            search_f: '',\r\n            search_st: new Date('2016-01-01'),\r\n            search_et: new Date(),\r\n        }\r\n\r\n    }\r\n\r\n\r\n    updateSearch = async e => {\r\n        await this.setState({\r\n          [e.target.name]: e.target.value\r\n        })\r\n        console.log(this.state);\r\n        \r\n        this.props.update(this.state)\r\n      }\r\n\r\n    render() {\r\n        console.log(this.props.data)\r\n        return (\r\n\r\n            <Card style={{ margin: '15px' }} >\r\n                <Navbar style={{ width: '100%' }}>\r\n                    <Form >\r\n                        <Row>\r\n                            <Col xs={2} >\r\n                                <Form.Label>Name</Form.Label>\r\n                                <DropdownButton id=\"dropdown-basic-button\" title={this.state.search_d || 'All Banks'} size=\"sm\" variant=\"outline-secondary\" size='md'>\r\n                                    <Dropdown.Item onClick={async () => {await this.setState({ ...this.state, search_d: '' }); this.props.update(this.state)}}>All</Dropdown.Item>\r\n                                    {this.props.ddlist.map(object => {\r\n                                        return (\r\n                                            <Dropdown.Item onClick={async () => {await this.setState({ ...this.state, search_d: object }); this.props.update(this.state)}}>{object}</Dropdown.Item>\r\n                                        )\r\n                                    })}\r\n                                </DropdownButton>\r\n                            </Col>\r\n                            <Col xs={3}>\r\n                                <Form.Label>Start Date & Time</Form.Label>\r\n                                <FormControl type=\"datetime-local\" value={this.state.search_st} onChange={this.updateSearch} name=\"search_st\" />\r\n                            </Col>\r\n                            <Col xs={3}>\r\n                                <Form.Label>End Date & Time</Form.Label>\r\n                                <FormControl type=\"datetime-local\" value={this.state.search_et} onChange={this.updateSearch} name=\"search_et\" />\r\n                            </Col>\r\n                            <Col xs={2}>\r\n                                <Form.Label>Search Category</Form.Label>\r\n                                <FormControl type=\"text\" placeholder=\"Filter Category\" value={this.state.search_f} onChange={this.updateSearch} name=\"search_f\" />\r\n                            </Col>\r\n                            <Col xs={2}>\r\n                                <Form.Label>Search Code</Form.Label>\r\n                                <FormControl type=\"text\" placeholder=\"Filter Code\" value={this.state.search_c} onChange={this.updateSearch} name=\"search_c\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Navbar>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Card, Dropdown, DropdownButton, ToggleButton, ToggleButtonGroup } from 'react-bootstrap'\r\nimport Charts from './Charts'\r\nimport Filter from './Filter'\r\nimport axios from 'axios'\r\n\r\nexport default class Donors extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            base: 'https://dc3so1gav1.execute-api.us-west-1.amazonaws.com/dev/api/v2/',\r\n            data: '',\r\n            search_c: '',\r\n            search_d: '',\r\n            search_f: '',\r\n            title: '',\r\n            xaxis: '',\r\n            yaxis: '',\r\n            graph: '',\r\n            search_st: new Date('2016-01-01'),\r\n            search_et: new Date(),\r\n            mode: '1',\r\n            dd: 'byname'\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount = async () => {\r\n        await this.donordonationbyname()\r\n    }\r\n\r\n    updateDate = async (data) => {\r\n        const start_date = new Date(this.state.search_st)\r\n        const end_date = new Date(this.state.search_et)\r\n\r\n        const temp = data.filter(obj => {\r\n            const obj_date = new Date(obj.donation_date)\r\n            return (obj_date >= start_date && obj_date <= end_date)\r\n        })\r\n        return temp\r\n    }\r\n\r\n    donordonationbyname = async () => {\r\n        var resp = []\r\n        var xaxis = []\r\n        var data = []\r\n        await axios.get(`${this.state.base}donordonation`)\r\n            .then(response => {\r\n                resp = response.data.result.result\r\n                console.log(resp);\r\n            })\r\n            .catch(error => console.log(error)\r\n            )\r\n\r\n        resp = await this.updateDate(resp)\r\n        resp.sort((a, b) => (a.totalDonation < b.totalDonation) ? 1 : -1)\r\n\r\n        resp.map(object => {\r\n            xaxis.push(object.donor_first_name)\r\n            data.push(object.totalDonation)\r\n        })\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            data: data,\r\n            xaxis: xaxis,\r\n            yaxis: 'Donation in Rupees',\r\n            title: 'Total Donations',\r\n            graph: 'bar',\r\n            mode: '1',\r\n            dd: 'byname'\r\n        })\r\n    }\r\n\r\n    donordonationbydate = async () => {\r\n        var resp = []\r\n        var xaxis = []\r\n        var data = []\r\n        await axios.get(`${this.state.base}donordonation`)\r\n            .then(response => {\r\n                resp = response.data.result.result\r\n                console.log(resp);\r\n            })\r\n            .catch(error => console.log(error)\r\n            )\r\n\r\n        resp = await this.updateDate(resp)\r\n        \r\n        resp.sort((a, b) => (new Date(a.donation_date) > new Date(b.donation_date)) ? 1 : -1)\r\n\r\n        resp.map(object => {\r\n            xaxis.push(object['donation_date'].split(\" \")[0])\r\n            data.push(object.totalDonation)\r\n        })\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            data: data,\r\n            xaxis: xaxis,\r\n            yaxis: 'Donation in Rupees',\r\n            title: 'Total Donations',\r\n            graph: 'bar',\r\n            mode: '1',\r\n            dd: 'bydate'\r\n        })\r\n    }\r\n\r\n    foodtypes = async () => {\r\n        var resp = []\r\n        var data = []\r\n        var dict = {}\r\n        await axios.get(`${this.state.base}foodtypes`)\r\n            .then(response => {\r\n                resp = response.data.result.result\r\n                console.log(resp);\r\n            })\r\n            .catch(error => console.log(error)\r\n            )\r\n\r\n        resp.map(object => {\r\n            object.fl_type in dict ? dict[object.fl_type] += object.total : dict[object.fl_type] = object.total\r\n        })\r\n\r\n\r\n        for (const [key, value] of Object.entries(dict)) {\r\n            data.push({\r\n                name: key,\r\n                y: value\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            data: data,\r\n            title: 'Total Donations by Type',\r\n            xaxis: '',\r\n            yaxis: '',\r\n            graph: 'pie',\r\n            mode: '3'\r\n        })\r\n    }\r\n\r\n    itemdonations = async () => {\r\n        var resp = []\r\n        var data = []\r\n        var dict = {}\r\n        await axios.get(`${this.state.base}itemdonations`)\r\n            .then(response => {\r\n                resp = response.data.result.result\r\n                console.log(resp);\r\n            })\r\n            .catch(error => console.log(error)\r\n            )\r\n\r\n        resp.map(object => {\r\n            object.fl_name in dict ? dict[object.fl_name] += object.TotalDonation : dict[object.fl_name] = object.TotalDonation\r\n        })\r\n\r\n\r\n        for (const [key, value] of Object.entries(dict)) {\r\n            data.push({\r\n                name: key,\r\n                y: value\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            data: data,\r\n            title: 'Total Donations by Number of Items',\r\n            graph: 'pie',\r\n            mode: '2'\r\n        })\r\n    }\r\n\r\n    changeMode = async (mode,dd) => {\r\n        switch (mode) {\r\n            case '1':\r\n                if (dd === 'byname') {\r\n                    await this.donordonationbyname()\r\n                }\r\n                else {\r\n                    await this.donordonationbydate()\r\n                }\r\n                break;\r\n            case '2':\r\n                await this.itemdonations()\r\n                break;\r\n            case '3':\r\n                await this.foodtypes()\r\n                break;\r\n            case '11':\r\n                await this.donordonationbyname()\r\n                break;\r\n            case '12':\r\n                await this.donordonationbydate()\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    updateSearch = async state => {\r\n        this.setState({\r\n            ...this.state,\r\n            search_c: state.search_c,\r\n            search_d: state.search_d,\r\n            search_f: state.search_f,\r\n            search_st: state.search_st,\r\n            search_et: state.search_et\r\n        })\r\n        await this.changeMode(this.state.mode, this.state.dd)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Card style={{ backgroundColor: 'rgb(226, 226, 226)', padding: '10px' }}>\r\n                <Row>\r\n                    <Col xs=\"5\">\r\n                        <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\r\n                            <ToggleButton value={1} style={{ fontSize: 15 }} onClick={(e) => this.changeMode(e.target.value)}>Donor Donations</ToggleButton>\r\n                            <ToggleButton value={2} style={{ fontSize: 15 }} onClick={(e) => this.changeMode(e.target.value)}>Item Donations</ToggleButton>\r\n                            <ToggleButton value={3} style={{ fontSize: 15 }} onClick={(e) => this.changeMode(e.target.value)}>Food Types</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Filter update={this.updateSearch} />\r\n                </Row>\r\n                <Card style={{ padding: '10px' }}>\r\n                    <Card>\r\n                        {this.state.mode === '1'? \r\n                        (<Row>\r\n                            <Col xs=\"12\">\r\n                                <ToggleButtonGroup style={{margin: '5px'}} className=\"float-right\" type=\"radio\" name=\"options\" defaultValue={11}>\r\n                                    <ToggleButton value={11} style={{ fontSize: 10 }} onClick={(e) => this.changeMode(e.target.value)}>By Name</ToggleButton>\r\n                                    <ToggleButton value={12} style={{ fontSize: 10 }} onClick={(e) => this.changeMode(e.target.value)}>By Date</ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                            </Col>\r\n                        </Row>) : (<div></div>)}\r\n                            <Charts data={this.state.data} title={this.state.title} xaxis={this.state.xaxis} yaxis={this.state.yaxis} graph={this.state.graph} />\r\n                        \r\n                    </Card>\r\n                </Card>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\n\r\nexport default class Table extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <div style={{ height: '370px', width: '100%' }} className=\"ag-theme-balham\">\r\n        <AgGridReact\r\n          columnDefs={this.props.columns}\r\n          rowData={this.props.data}\r\n          pagination={true}\r\n          suppressSizeToFit={true}\r\n          defaultColDef={{ resizable: true }}\r\n          paginationPageSize={10}>\r\n        </AgGridReact>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Card, Dropdown, DropdownButton, ToggleButton, ToggleButtonGroup } from 'react-bootstrap'\r\nimport Charts from './Charts'\r\nimport Table from './Table'\r\nimport Filter from './Filter'\r\nimport axios from 'axios'\r\n\r\nexport default class Orders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            base: 'https://dc3so1gav1.execute-api.us-west-1.amazonaws.com/dev/api/v2/',\r\n            data: '',\r\n            search_c: '',\r\n            search_d: '',\r\n            search_f: '',\r\n            title: '',\r\n            xaxis: '',\r\n            yaxis: '',\r\n            graph: ''\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        this.deliveries()\r\n    }\r\n\r\n    deliveries = async () => {\r\n        var resp = []\r\n        var xaxis = []\r\n        var data = []\r\n        var dict = {}\r\n        await axios.get(`${this.state.base}deliveries`)\r\n            .then(response => {\r\n                resp = response.data.result.result\r\n                console.log(resp);\r\n            })\r\n            .catch(error => console.log(error)\r\n            )\r\n        resp.map(object => {\r\n            let temp = new Date(object.delivery_date)\r\n            console.log(temp.getMonth());\r\n            temp.getMonth() in dict ? dict[temp.getMonth()] += 1 : dict[temp.getMonth()] = 1\r\n        })\r\n        const yearmap = {1 : 'Jan', 2: 'Feb',3:'Mar',4:'Apr',5:'May',6:'June',7:'July',8:'Aug',9:'Sep',10:'Oct',11:'Nov',12:'Dec'}\r\n        for (const [key, value] of Object.entries(dict)) {\r\n            xaxis.push(yearmap[key])\r\n            data.push(value)\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            data: data,\r\n            xaxis: xaxis,\r\n            yaxis: 'No of Orders',\r\n            title: 'Total Orders',\r\n            graph: 'bar'\r\n        })\r\n    }\r\n\r\n    updateSearch = state => {\r\n        this.setState({\r\n            ...this.state,\r\n            search_c: state.search_c,\r\n            search_d: state.search_d,\r\n            search_f: state.search_f,\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Card style={{ backgroundColor: 'rgb(226, 226, 226)', padding: '10px' }}>\r\n                <Row>\r\n                    <Filter update={this.updateSearch} />\r\n                </Row>\r\n                <Card style={{ padding: '10px' }}>\r\n                    <Card>\r\n                        <Charts data={this.state.data} title={this.state.title} xaxis={this.state.xaxis} yaxis={this.state.yaxis} graph={this.state.graph} />\r\n                    </Card>\r\n                </Card>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Card, Dropdown, DropdownButton, ToggleButton, ToggleButtonGroup } from 'react-bootstrap'\r\nimport Table from './Table'\r\nimport Filter from './Filter'\r\nimport axios from 'axios'\r\n\r\nexport default class Inventory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            base: 'https://dc3so1gav1.execute-api.us-west-1.amazonaws.com/dev/api/v2/',\r\n            columns: [],\r\n            search_c: '',\r\n            search_d: '',\r\n            search_f: '',\r\n            data: [],\r\n            ddlist: []\r\n\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        this.excess()\r\n    }\r\n\r\n    updateData = async (data) => {\r\n        const temp = data.filter(obj => {\r\n            return (obj.fb_name.indexOf(this.state.search_d) !== -1)\r\n        })\r\n        return temp\r\n    }\r\n\r\n    excess = async () => {\r\n        var resp = []\r\n        var data = []\r\n        await axios.get(`${this.state.base}excess`)\r\n            .then(response => {\r\n                resp = response.data.result.result\r\n                console.log(resp);\r\n            })\r\n            .catch(error => console.log(error)\r\n            )\r\n\r\n        resp = await this.updateData(resp)\r\n            \r\n        var ddlist = []\r\n        resp.map(object => {\r\n            if (!ddlist.includes(object.fb_name)) { ddlist.push(object.fb_name) }\r\n            data.push({\r\n                name: object.fl_name,\r\n                excess: object.inv_qty-object.excess,\r\n                quantity: object.inv_qty\r\n            })\r\n        })\r\n\r\n        const columns = [\r\n            { field: 'name', headerName: 'Name', sortable: true, unSortIcon: true, filter: true, width: 450 },\r\n            { field: 'excess', headerName: 'Anticipated Usage', sortable: true, unSortIcon: true, filter: true, width: 300 },\r\n            { field: 'quantity', headerName: 'Quantity', sortable: true, unSortIcon: true, filter: true, width: 300 },\r\n        ]\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            columns: columns,\r\n            data: data,\r\n            mode: '1',\r\n            ddlist: ddlist\r\n        })\r\n    }\r\n\r\n    low = async () => {\r\n        var resp = []\r\n        var data = []\r\n        await axios.get(`${this.state.base}low`)\r\n            .then(response => {\r\n                resp = response.data.result.result\r\n                console.log(resp);\r\n            })\r\n            .catch(error => console.log(error)\r\n            )\r\n\r\n        resp = await this.updateData(resp)\r\n\r\n        resp.map(object => {\r\n            data.push({\r\n                name: object.fl_name,\r\n                excess: object.excess,\r\n                quantity: object.inv_qty\r\n            })\r\n        })\r\n\r\n        const columns = [\r\n            { field: 'name', headerName: 'Name', sortable: true, unSortIcon: true, filter: true, width: 450 },\r\n            { field: 'excess', headerName: 'Low', sortable: true, unSortIcon: true, filter: true, width: 300 },\r\n            { field: 'quantity', headerName: 'Quantity', sortable: true, unSortIcon: true, filter: true, width: 300 },\r\n        ]\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            columns: columns,\r\n            data: data,\r\n            mode: '2'\r\n        })\r\n    }\r\n\r\n    zero = async () => {\r\n        var resp = []\r\n        var data = []\r\n        await axios.get(`${this.state.base}zero`)\r\n            .then(response => {\r\n                resp = response.data.result.result\r\n                console.log(resp);\r\n            })\r\n            .catch(error => console.log(error)\r\n            )\r\n\r\n        resp = await this.updateData(resp)\r\n\r\n        resp.map(object => {\r\n            data.push({\r\n                name: object.fl_name,\r\n            })\r\n        })\r\n\r\n        const columns = [\r\n            { field: 'name', headerName: 'Name', sortable: true, unSortIcon: true, filter: true, width: 1050 },\r\n        ]\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            columns: columns,\r\n            data: data,\r\n            mode: '3'\r\n        })\r\n    }\r\n\r\n\r\n    changeMode = async (mode) => {\r\n        switch (mode) {\r\n            case '1':\r\n                await this.excess()\r\n                break;\r\n            case '2':\r\n                await this.low()\r\n                break;\r\n            case '3':\r\n                await this.zero()\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    updateSearch = state => {\r\n        this.setState({\r\n            ...this.state,\r\n            search_c: state.search_c,\r\n            search_d: state.search_d,\r\n            search_f: state.search_f,\r\n        })\r\n        this.changeMode(this.state.mode)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Card style={{ backgroundColor: 'rgb(226, 226, 226)', padding: '10px' }}>\r\n                <Row>\r\n                    <Col xs=\"5\">\r\n                        <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\r\n                            <ToggleButton value={1} style={{ fontSize: 15 }} onClick={(e) => this.changeMode(e.target.value)}>Excess</ToggleButton>\r\n                            <ToggleButton value={2} style={{ fontSize: 15 }} onClick={(e) => this.changeMode(e.target.value)}>Low</ToggleButton>\r\n                            <ToggleButton value={3} style={{ fontSize: 15 }} onClick={(e) => this.changeMode(e.target.value)}>Zero</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Filter update={this.updateSearch} ddlist={this.state.ddlist} />\r\n                </Row>\r\n                <Card style={{ padding: '10px' }}>\r\n                    <Card>\r\n                        <Table columns={this.state.columns} data={this.state.data} />\r\n                    </Card>\r\n                </Card>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Card, Dropdown, DropdownButton, ToggleButton, ToggleButtonGroup } from 'react-bootstrap'\r\nimport Charts from './Charts'\r\nimport Filter from './Filter'\r\nimport axios from 'axios'\r\n\r\nexport default class Customer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            base: 'https://dc3so1gav1.execute-api.us-west-1.amazonaws.com/dev/api/v2/',\r\n            data: '',\r\n            search_c: '',\r\n            search_d: '',\r\n            search_f: '',\r\n            title: '',\r\n            xaxis: '',\r\n            yaxis: '',\r\n            graph: ''\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        this.customervalue()\r\n    }\r\n\r\n    customervalue = async () => {\r\n        var resp = []\r\n        var xaxis = []\r\n        var data = []\r\n        var dict = {}\r\n        await axios.get(`${this.state.base}customervalue`)\r\n            .then(response => {\r\n                resp = response.data.result.result\r\n                console.log(resp);\r\n            })\r\n            .catch(error => console.log(error)\r\n            )\r\n        resp.map(object => {\r\n            object.ctm_id in dict ? dict[object.ctm_id] += object.Total_Value : dict[object.ctm_id] = object.Total_Value\r\n        })\r\n\r\n        for (const [key, value] of Object.entries(dict)) {\r\n            xaxis.push(key)\r\n            data.push(value)\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            data: data,\r\n            xaxis: xaxis,\r\n            yaxis: 'Value',\r\n            title: 'Total Orders',\r\n            graph: 'bar'\r\n        })\r\n    }\r\n\r\n    updateSearch = state => {\r\n        this.setState({\r\n            ...this.state,\r\n            search_c: state.search_c,\r\n            search_d: state.search_d,\r\n            search_f: state.search_f,\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Card style={{ backgroundColor: 'rgb(226, 226, 226)', padding: '10px' }}>\r\n                <Card style={{ padding: '10px' }}>\r\n                    <Card>\r\n                        <Charts data={this.state.data} title={this.state.title} xaxis={this.state.xaxis} yaxis={this.state.yaxis} graph={this.state.graph} />\r\n                    </Card>\r\n                </Card>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport Navbar from './components/NavBar'\r\nimport Donors from './components/Donors'\r\nimport Orders from './components/Orders'\r\nimport Inventory from './components/Inventory'\r\nimport Customer from './components/Customer'\r\n\r\n\r\nclass App extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <div className=\"container\">\r\n            <Route exact path=\"/\" component={Donors} />\r\n            <Route exact path=\"/donors\" component={Donors} />\r\n            <Route exact path=\"/orders\" component={Orders} />\r\n            <Route exact path=\"/inventory\" component={Inventory} />\r\n            <Route exact path=\"/customers\" component={Customer} />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}