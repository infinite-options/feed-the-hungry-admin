{"version":3,"sources":["components/NavBar.js","components/Charts.js","components/Filter.js","components/Donors.js","components/Table.js","components/Orders.js","components/Inventory.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","state","search_d","Navbar","bg","variant","className","Brand","href","Form","inline","FormControl","type","placeholder","Button","DropdownButton","id","title","this","size","drop","Dropdown","Item","onClick","update","ddlist","map","object","Nav","to","Component","withRouter","Charts","options","graph","console","log","chart","text","xAxis","xaxis","yAxis","min","yaxis","plotOptions","column","pointPadding","borderWidth","series","name","showInLegend","data","plotBackgroundColor","plotBorderWidth","plotShadow","tooltip","pointFormat","accessibility","point","valueSuffix","legend","enabled","pie","allowPointSelect","cursor","dataLabels","format","colorByPoint","labels","opposite","color","marker","symbol","highcharts","Highcharts","Filter","params","updateSearch","e","a","setState","target","value","search_c","search_f","search_st","Date","search_et","Card","style","margin","width","Row","Col","xs","Label","onChange","Donors","componentDidMount","donordonationbyname","updateDate","start_date","end_date","temp","filter","obj","obj_date","donation_date","resp","dict","data2","banks","axios","get","base","then","response","result","catch","error","sort","b","donor_first_name","forEach","fb_name","donor_last_name","totalDonation","total_qty","includes","push","Object","entries","key","val","categories","mode","dd","donordonationbydate","date","split","foodtypes","fl_type","y","itemdonations","fl_name","changeMode","bank","backgroundColor","padding","ToggleButtonGroup","defaultValue","ToggleButton","fontSize","Table","height","columnDefs","columns","rowData","pagination","suppressSizeToFit","defaultColDef","resizable","paginationPageSize","Orders","orderdetails","orders","sortbycustomer","data1","order","customer_name","Total_Value","Total_Items","parseFloat","toFixed","sortbytype","dorp","o_delivery_pickup","sortbyday","delivery_date","sortbymonth","month_strings","month","parseInt","indexOf","sortbylocation","Inventory","excess","inv_qty","quantity","field","headerName","sortable","unSortIcon","low","zero","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fa3da6ff.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport {Navbar, Nav, Form, FormControl, Button, Col, Dropdown, DropdownButton} from 'react-bootstrap'\r\n\r\nclass NavBar extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        search_d: ''\r\n      }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\" className=\"d-flex justify-content-around p-2 bd-highlight\" >\r\n                    <Navbar.Brand href=\"/\">\r\n                        Feed the Hungry\r\n                    </Navbar.Brand>\r\n                    <Form inline>\r\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                        <Button variant=\"outline-light\">Search</Button>\r\n                    </Form>\r\n                    <DropdownButton id=\"dropdown-basic-button\" title={this.search_d || 'All Banks'} variant=\"outline-secondary\" size='md' drop='left'>\r\n                        <Dropdown.Item onClick={() => {this.search_d = ''; this.props.update('')}}>All</Dropdown.Item>\r\n                        {this.props.ddlist.map(object => {\r\n                            return (\r\n                                <Dropdown.Item onClick={() => {this.search_d = object; this.props.update(object)}}>{object}</Dropdown.Item>\r\n                            )\r\n                        })}\r\n                    </DropdownButton>\r\n                  </Navbar>\r\n                  <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Nav className=\"\" >\r\n                        <Nav>\r\n                            <Link to=\"/donors\" className=\"nav-link\">\r\n                                Donors\r\n                            </Link>\r\n                        </Nav>\r\n                        <Nav>\r\n                            <Link to=\"/orders\" className=\"nav-link\">\r\n                                Orders\r\n                            </Link>\r\n                        </Nav>\r\n                        <Nav>\r\n                            <Link to=\"/inventory\" className=\"nav-link\">\r\n                                Inventory\r\n                            </Link>\r\n                        </Nav>\r\n                    </Nav>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(NavBar)\r\n","import React, { Component } from 'react'\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\n\r\nexport default class Charts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        var options = {}\r\n        switch (this.props.graph) {\r\n            case 'bar':\r\n                console.log('matched bar')\r\n                options = {\r\n                    chart: {\r\n                        type: 'column'\r\n                    },\r\n                    title: {\r\n                        text: this.props.title\r\n                    },\r\n                    xAxis: this.props.xaxis,\r\n                    yAxis: {\r\n                        min: 0,\r\n                        title: {\r\n                            text: this.props.yaxis\r\n                        }\r\n                    },\r\n                    plotOptions: {\r\n                        column: {\r\n                            pointPadding: 0.2,\r\n                            borderWidth: 0\r\n                        }\r\n                    },\r\n                    series: [{\r\n                        name: 'Share',\r\n                        showInLegend: false,\r\n                        data: this.props.data\r\n                    }]\r\n                }\r\n                break;\r\n            case 'pie':\r\n                console.log('matched pie')\r\n                options = {\r\n                    chart: {\r\n                        plotBackgroundColor: null,\r\n                        plotBorderWidth: null,\r\n                        plotShadow: false,\r\n                        type: 'pie'\r\n                    },\r\n                    yAxis: {\r\n                        min: 0,\r\n                        title: {\r\n                            text: ''\r\n                        }\r\n                    },\r\n                    title: {\r\n                        text: this.props.title\r\n                    },\r\n                    tooltip: {\r\n                        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n                    },\r\n                    accessibility: {\r\n                        point: {\r\n                            valueSuffix: '%'\r\n                        }\r\n                    },\r\n                    legend: {\r\n                      enabled: false\r\n                    },\r\n                    plotOptions: {\r\n                        pie: {\r\n                            allowPointSelect: true,\r\n                            cursor: 'pointer',\r\n                            dataLabels: {\r\n                                enabled: true,\r\n                                format: '<b>{point.name}</b>: {point.y}'\r\n                            }\r\n                        }\r\n                    },\r\n                    series: [{\r\n                        type: 'pie',\r\n                        name: 'Share',\r\n                        colorByPoint: true,\r\n                        data: this.props.data\r\n                    }]\r\n                }\r\n                break;\r\n            case 'combo':\r\n                console.log('matched combo')\r\n                options = {\r\n                  title: {\r\n                    text: this.props.title\r\n                  },\r\n                  xAxis: this.props.xaxis,\r\n                  yAxis: [{\r\n                    min: 0,\r\n                    title: {\r\n                      text: this.props.yaxis[0]\r\n                    },\r\n                    labels: {\r\n                      format: '${value}'\r\n                    }\r\n                  }, {\r\n                    min: 0,\r\n                    title: {\r\n                      text: this.props.yaxis[1]\r\n                    },\r\n                    opposite: true\r\n                  }],\r\n                  series: [{\r\n                    type: 'bar',\r\n                    data: this.props.data[0],\r\n                    showInLegend: false,\r\n                    name: 'Value',\r\n                    colorByPoint: false,\r\n                    tooltip: {\r\n                      pointFormat: '{series.name}: <b>${point.y}</b>'\r\n                    },\r\n                  }, {\r\n                    type: 'scatter',\r\n                    data: this.props.data[1],\r\n                    showInLegend: false,\r\n                    name: 'Quantity',\r\n                    color: 'black',\r\n                    tooltip: {\r\n                      pointFormat: '<b>{point.y}</b>'\r\n                    },\r\n                    marker: {\r\n                      symbol: 'circle'\r\n                    },\r\n                    yAxis: 1\r\n                  }]\r\n                }\r\n                break;\r\n            default:\r\n                options = {}\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <HighchartsReact\r\n                    highcharts={Highcharts}\r\n                    options={options}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Row, Col, Card, Dropdown, DropdownButton, Navbar, FormControl, Form } from 'react-bootstrap'\r\n\r\n\r\nexport default class Filter extends Component {\r\n    constructor(params) {\r\n        super(params)\r\n        this.state = {\r\n            search_c: '',\r\n            search_d: '',\r\n            search_f: '',\r\n            search_st: new Date('2016-01-01'),\r\n            search_et: new Date()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    updateSearch = async e => {\r\n        await this.setState({\r\n          [e.target.name]: e.target.value\r\n        })\r\n        console.log(this.state);\r\n\r\n        this.props.update(this.state)\r\n      }\r\n\r\n    render() {\r\n        console.log(this.props.data)\r\n        return (\r\n\r\n            <Card style={{ margin: '15px' }} >\r\n                <Navbar style={{ width: '100%' }}>\r\n                    <Form >\r\n                        <Row>\r\n                            <Col xs={3}>\r\n                                <Form.Label>Start Date & Time</Form.Label>\r\n                                <FormControl type=\"datetime-local\" value={this.state.search_st} onChange={this.updateSearch} name=\"search_st\" />\r\n                            </Col>\r\n                            <Col xs={3}>\r\n                                <Form.Label>End Date & Time</Form.Label>\r\n                                <FormControl type=\"datetime-local\" value={this.state.search_et} onChange={this.updateSearch} name=\"search_et\" />\r\n                            </Col>\r\n                            <Col xs={3}>\r\n                                <Form.Label>Search Category</Form.Label>\r\n                                <FormControl type=\"text\" placeholder=\"Filter Category\" value={this.state.search_f} onChange={this.updateSearch} name=\"search_f\" />\r\n                            </Col>\r\n                            <Col xs={3}>\r\n                                <Form.Label>Search Code</Form.Label>\r\n                                <FormControl type=\"text\" placeholder=\"Filter Code\" value={this.state.search_c} onChange={this.updateSearch} name=\"search_c\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Navbar>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Card, Dropdown, DropdownButton, ToggleButton, ToggleButtonGroup } from 'react-bootstrap'\r\nimport NavBar from './NavBar'\r\nimport Charts from './Charts'\r\nimport Filter from './Filter'\r\nimport axios from 'axios'\r\n\r\nexport default class Donors extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            base: 'https://dc3so1gav1.execute-api.us-west-1.amazonaws.com/dev/api/v2/',\r\n            data: '',\r\n            search_c: '',\r\n            search_d: '',\r\n            search_f: '',\r\n            title: '',\r\n            xaxis: '',\r\n            yaxis: '',\r\n            graph: '',\r\n            search_st: new Date('2016-01-01'),\r\n            search_et: new Date(),\r\n            mode: '1',\r\n            dd: 'byname',\r\n            banks: []\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount = async () => {\r\n        await this.donordonationbyname()\r\n    }\r\n\r\n    updateDate = async (data) => {\r\n        const start_date = new Date(this.state.search_st)\r\n        const end_date = new Date(this.state.search_et)\r\n\r\n        const temp = data.filter(obj => {\r\n            const obj_date = new Date(obj.donation_date)\r\n            return (obj_date >= start_date && obj_date <= end_date)\r\n        })\r\n        return temp\r\n    }\r\n\r\n    donordonationbyname = async () => {\r\n        var resp = []\r\n        var xaxis = []\r\n        var dict = {}\r\n        var data = []\r\n        var data2 = []\r\n        var banks = []\r\n        await axios.get(`${this.state.base}donordonation`)\r\n            .then(response => {\r\n                resp = response.data.result.result\r\n                console.log(resp);\r\n            })\r\n            .catch(error => console.log(error)\r\n            )\r\n\r\n        resp = await this.updateDate(resp)\r\n        resp.sort((a, b) => (a.donor_first_name < b.donor_first_name) ? -1 : 1)\r\n\r\n        resp.forEach(object => {\r\n            if (object.fb_name === this.state.search_d || this.state.search_d === '') {\r\n                let name = `${object.donor_first_name} ${object.donor_last_name}`\r\n                if (name in dict) {\r\n                  dict[name][0] += object.totalDonation\r\n                  dict[name][1] += object.total_qty\r\n                } else {\r\n                  dict[name] = [object.totalDonation, object.total_qty]\r\n                }\r\n            }\r\n            if (!banks.includes(object.fb_name)) banks.push(object.fb_name)\r\n        })\r\n\r\n        for (const [key, val] of Object.entries(dict)) {\r\n          xaxis.push(key)\r\n          data.push(val[0])\r\n          data2.push(val[1])\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            data: [data, data2],\r\n            xaxis: {categories: xaxis},\r\n            yaxis: ['Donation Value', 'Quantity Donated'],\r\n            title: 'Donations',\r\n            graph: 'combo',\r\n            mode: '1',\r\n            dd: 'byname',\r\n            banks: banks\r\n        })\r\n    }\r\n\r\n    donordonationbydate = async () => {\r\n        var resp = []\r\n        var xaxis = []\r\n        var dict = {}\r\n        var data = []\r\n        var data2 = []\r\n        var banks = []\r\n        await axios.get(`${this.state.base}donordonation`)\r\n            .then(response => {\r\n                resp = response.data.result.result\r\n                console.log(resp);\r\n            })\r\n            .catch(error => console.log(error)\r\n            )\r\n\r\n        resp = await this.updateDate(resp)\r\n                resp.sort((a, b) => (new Date(a.donation_date) < new Date(b.donation_date)) ? -1 : 1)\r\n\r\n        resp.forEach(object => {\r\n            if (object.fb_name === this.state.search_d || this.state.search_d === '') {\r\n                let date = object.donation_date.split(' ')[0]\r\n                if (date in dict) {\r\n                  dict[date][0] += object.totalDonation\r\n                  dict[date][1] += object.total_qty\r\n                } else {\r\n                  dict[date] = [object.totalDonation, object.total_qty]\r\n                }\r\n            }\r\n            if (!banks.includes(object.fb_name)) banks.push(object.fb_name)\r\n        })\r\n\r\n        for (const [key, val] of Object.entries(dict)) {\r\n          xaxis.push(key)\r\n          data.push(val[0])\r\n          data2.push(val[1])\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            data: [data, data2],\r\n            xaxis: {categories: xaxis},\r\n            yaxis: ['Donation Value', 'Quantity Donated'],\r\n            title: 'Donations',\r\n            graph: 'combo',\r\n            mode: '1',\r\n            dd: 'bydate',\r\n            banks: banks\r\n        })\r\n    }\r\n\r\n    foodtypes = async () => {\r\n        var resp = []\r\n        var data = []\r\n        var dict = {}\r\n        var banks = []\r\n        await axios.get(`${this.state.base}foodtypes`)\r\n            .then(response => {\r\n                resp = response.data.result.result\r\n                console.log(resp);\r\n            })\r\n            .catch(error => console.log(error)\r\n            )\r\n\r\n        resp.map(object => {\r\n            if (object.fb_name === this.state.search_d || this.state.search_d === '')\r\n              object.fl_type in dict ? dict[object.fl_type] += object.totalDonation : dict[object.fl_type] = object.totalDonation\r\n            if (!banks.includes(object.fb_name)) banks.push(object.fb_name)\r\n        })\r\n\r\n\r\n        for (const [key, value] of Object.entries(dict)) {\r\n            data.push({\r\n                name: key,\r\n                y: value\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            data: data,\r\n            title: 'Total Donations by Type',\r\n            xaxis: '',\r\n            yaxis: '',\r\n            graph: 'pie',\r\n            mode: '3',\r\n            banks: banks\r\n        })\r\n    }\r\n\r\n    itemdonations = async () => {\r\n        var resp = []\r\n        var data = []\r\n        var dict = {}\r\n        var banks = []\r\n        await axios.get(`${this.state.base}itemdonations`)\r\n            .then(response => {\r\n                resp = response.data.result.result\r\n                console.log(resp);\r\n            })\r\n            .catch(error => console.log(error)\r\n            )\r\n\r\n        resp.map(object => {\r\n          if (object.fb_name === this.state.search_d || this.state.search_d === '')\r\n            object.fl_name in dict ? dict[object.fl_name] += object.totalDonation : dict[object.fl_name] = object.totalDonation\r\n          if (!banks.includes(object.fb_name)) banks.push(object.fb_name)\r\n        })\r\n\r\n\r\n        for (const [key, value] of Object.entries(dict)) {\r\n            data.push({\r\n                name: key,\r\n                y: value\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            data: data,\r\n            title: 'Total Donations by Number of Items',\r\n            graph: 'pie',\r\n            mode: '2',\r\n            banks: banks\r\n        })\r\n    }\r\n\r\n    changeMode = async (mode,dd) => {\r\n        switch (mode) {\r\n            case '1':\r\n                if (dd === 'byname') {\r\n                    await this.donordonationbyname()\r\n                }\r\n                else {\r\n                    await this.donordonationbydate()\r\n                }\r\n                break;\r\n            case '2':\r\n                await this.itemdonations()\r\n                break;\r\n            case '3':\r\n                await this.foodtypes()\r\n                break;\r\n            case '11':\r\n                await this.donordonationbyname()\r\n                break;\r\n            case '12':\r\n                await this.donordonationbydate()\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    updateSearch = async state => {\r\n        this.setState({\r\n            ...this.state,\r\n            search_c: state.search_c,\r\n            search_d: state.search_d,\r\n            search_f: state.search_f,\r\n            search_st: state.search_st,\r\n            search_et: state.search_et\r\n        })\r\n        await this.changeMode(this.state.mode, this.state.dd)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n          <>\r\n            <NavBar ddlist={this.state.banks} update={async bank => {await this.updateSearch({...this.state, search_d: bank})}}/>\r\n            <Card style={{ backgroundColor: 'rgb(226, 226, 226)', padding: '10px' }}>\r\n                <Row>\r\n                    <Col xs=\"5\">\r\n                        <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\r\n                            <ToggleButton value={1} style={{ fontSize: 15 }} onClick={(e) => this.changeMode(e.target.value, this.state.dd)}>Donor Donations</ToggleButton>\r\n                            <ToggleButton value={2} style={{ fontSize: 15 }} onClick={(e) => this.changeMode(e.target.value)}>Item Donations</ToggleButton>\r\n                            <ToggleButton value={3} style={{ fontSize: 15 }} onClick={(e) => this.changeMode(e.target.value)}>Food Types</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Filter update={this.updateSearch}/>\r\n                </Row>\r\n                <Card style={{ padding: '10px' }}>\r\n                    <Card>\r\n                        {this.state.mode === '1'?\r\n                        (<Row>\r\n                            <Col xs=\"12\">\r\n                                <ToggleButtonGroup style={{margin: '5px'}} className=\"float-right\" type=\"radio\" name=\"options\" defaultValue={this.state.dd === 'byname' ? 11 : 12}>\r\n                                    <ToggleButton value={11} style={{ fontSize: 10 }} onClick={(e) => {this.setState({dd: 'byname'}); this.changeMode(e.target.value)}}>By Name</ToggleButton>\r\n                                    <ToggleButton value={12} style={{ fontSize: 10 }} onClick={(e) => {this.setState({dd: 'bydate'}); this.changeMode(e.target.value)}}>By Date</ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                            </Col>\r\n                        </Row>) : (<div></div>)}\r\n                            <Charts data={this.state.data} title={this.state.title} xaxis={this.state.xaxis} yaxis={this.state.yaxis} graph={this.state.graph} />\r\n\r\n                    </Card>\r\n                </Card>\r\n            </Card>\r\n          </>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\r\n\r\nexport default class Table extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <div style={{ height: '370px', width: '100%' }} className=\"ag-theme-balham\">\r\n        <AgGridReact\r\n          columnDefs={this.props.columns}\r\n          rowData={this.props.data}\r\n          pagination={true}\r\n          suppressSizeToFit={true}\r\n          defaultColDef={{ resizable: true }}\r\n          paginationPageSize={10}>\r\n        </AgGridReact>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Card, Dropdown, DropdownButton, ToggleButton, ToggleButtonGroup } from 'react-bootstrap'\r\nimport Charts from './Charts'\r\nimport Table from './Table'\r\nimport Filter from './Filter'\r\nimport NavBar from './NavBar'\r\nimport axios from 'axios'\r\n\r\nexport default class Orders extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n          base: 'https://dc3so1gav1.execute-api.us-west-1.amazonaws.com/dev/api/v2/',\r\n          data: '',\r\n          search_c: '',\r\n          search_d: '',\r\n          search_f: '',\r\n          title: 'Orders',\r\n          xaxis: '',\r\n          yaxis: '',\r\n          graph: '',\r\n          banks: []\r\n      }\r\n  }\r\n\r\n\r\n  componentDidMount = () => {\r\n      this.orderdetails()\r\n  }\r\n\r\n  orderdetails = async () => {\r\n      var resp = []\r\n      var banks = []\r\n      await axios.get(`${this.state.base}orderdetails`)\r\n          .then(response => {\r\n              resp = response.data.result.result;\r\n              console.log(resp)\r\n          })\r\n          .catch(error => console.log(error))\r\n      resp.forEach(object => {\r\n          if (!banks.includes(object.fb_name)) banks.push(object.fb_name)\r\n      })\r\n      await this.setState({\r\n          ...this.state,\r\n          orders: resp,\r\n          banks: banks,\r\n      })\r\n      this.sortbycustomer()\r\n  }\r\n\r\n  sortbycustomer = async () => {\r\n      var dict = {}\r\n      var data = []\r\n      var data1 = []\r\n      var xaxis = []\r\n      this.state.orders.forEach(order => {\r\n          if (order.fb_name === this.state.search_d || this.state.search_d === '') {\r\n              if (order.customer_name in dict) {\r\n                dict[order.customer_name][0] += order.Total_Value\r\n                dict[order.customer_name][1] += order.Total_Items\r\n              } else {\r\n                dict[order.customer_name] = [order.Total_Value, order.Total_Items]\r\n              }\r\n          }\r\n      })\r\n      let entries = Object.entries(dict)\r\n      entries.sort((a, b) => a[0] < b[0] ? -1 : 1)\r\n      for (const [key, value] of entries) {\r\n          xaxis.push(key)\r\n          data.push(parseFloat(value[0].toFixed(2)))\r\n          data1.push(value[1])\r\n      }\r\n      this.setState({\r\n          ...this.state,\r\n          data: [data, data1],\r\n          xaxis: {categories: xaxis},\r\n          yaxis: ['Total Value', 'Number of Items'],\r\n          graph: 'combo'\r\n      })\r\n  }\r\n\r\n  sortbytype = async() => {\r\n      var dict = {}\r\n      var data = []\r\n      var data1 = []\r\n      var xaxis = []\r\n      this.state.orders.forEach(order => {\r\n          let dorp = order.o_delivery_pickup ? 'Delivery' : 'Pickup'\r\n          if (order.fb_name === this.state.search_d || this.state.search_d === '') {\r\n              if (dorp in dict) {\r\n                dict[dorp][0] += order.Total_Value\r\n                dict[dorp][1] += order.Total_Items\r\n              } else {\r\n                dict[dorp] = [order.Total_Value, order.Total_Items]\r\n              }\r\n          }\r\n      })\r\n      let entries = Object.entries(dict)\r\n      entries.sort((a, b) => a[0] < b[0] ? -1 : 1)\r\n      for (const [key, value] of entries) {\r\n          xaxis.push(key)\r\n          data.push(parseFloat(value[0].toFixed(2)))\r\n          data1.push(value[1])\r\n      }\r\n      this.setState({\r\n          ...this.state,\r\n          data: [data, data1],\r\n          xaxis: {categories: xaxis},\r\n          yaxis: ['Total Value', 'Number of Items'],\r\n          graph: 'combo'\r\n      })\r\n  }\r\n\r\n  sortbyday = async() => {\r\n      var dict = {}\r\n      var data = []\r\n      var data1 = []\r\n      var xaxis = []\r\n      this.state.orders.forEach(order => {\r\n          if (order.fb_name === this.state.search_d || this.state.search_d === '') {\r\n              if (order.delivery_date in dict) {\r\n                dict[order.delivery_date][0] += order.Total_Value\r\n                dict[order.delivery_date][1] += order.Total_Items\r\n              } else {\r\n                dict[order.delivery_date] = [order.Total_Value, order.Total_Items]\r\n              }\r\n          }\r\n      })\r\n      let entries = Object.entries(dict)\r\n      entries.sort((a, b) => a[0] < b[0] ? -1 : 1)\r\n      for (const [key, value] of entries) {\r\n          xaxis.push(key)\r\n          data.push(parseFloat(value[0].toFixed(2)))\r\n          data1.push(value[1])\r\n      }\r\n      this.setState({\r\n          ...this.state,\r\n          data: [data, data1],\r\n          xaxis: {categories: xaxis},\r\n          yaxis: ['Total Value', 'Number of Items'],\r\n          graph: 'combo'\r\n      })\r\n  }\r\n\r\n  sortbymonth = async() => {\r\n      var dict = {}\r\n      var data = []\r\n      var data1 = []\r\n      var xaxis = []\r\n      const month_strings = ['', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'October', 'November', 'December']\r\n      this.state.orders.forEach(order => {\r\n          if (order.fb_name === this.state.search_d || this.state.search_d === '') {\r\n              let month = parseInt(order.delivery_date.split('-')[0])\r\n              month = month_strings[month]\r\n              if (month in dict) {\r\n                dict[month][0] += order.Total_Value\r\n                dict[month][1] += order.Total_Items\r\n              } else {\r\n                dict[month] = [order.Total_Value, order.Total_Items]\r\n              }\r\n          }\r\n      })\r\n      let entries = Object.entries(dict)\r\n      entries.sort((a, b) => month_strings.indexOf(a[0]) < month_strings.indexOf(b[0]) ? -1 : 1)\r\n      for (const [key, value] of entries) {\r\n          xaxis.push(key)\r\n          data.push(parseFloat(value[0].toFixed(2)))\r\n          data1.push(value[1])\r\n      }\r\n      this.setState({\r\n          ...this.state,\r\n          data: [data, data1],\r\n          xaxis: {categories: xaxis},\r\n          yaxis: ['Total Value', 'Number of Items'],\r\n          graph: 'combo'\r\n      })\r\n  }\r\n\r\n  sortbylocation = async() => {\r\n\r\n  }\r\n\r\n  updateSearch = state => {\r\n      this.setState({\r\n          ...this.state,\r\n          search_c: state.search_c,\r\n          search_d: state.search_d,\r\n          search_f: state.search_f,\r\n      })\r\n      this.orderdetails()\r\n  }\r\n\r\n\r\n  render() {\r\n      return (\r\n        <>\r\n          <NavBar ddlist={this.state.banks} update={async bank => {await this.updateSearch({...this.state, search_d: bank})}}/>\r\n          <Card style={{ backgroundColor: 'rgb(226, 226, 226)', padding: '10px' }}>\r\n              <Row>\r\n                  <Filter update={this.updateSearch}/>\r\n              </Row>\r\n              <Card style={{ padding: '10px' }}>\r\n                  <Card>\r\n                      <Col xs=\"12\">\r\n                          <ToggleButtonGroup style={{margin: '5px'}} className=\"float-right\" type=\"radio\" name=\"options\" defaultValue={11}>\r\n                              <ToggleButton value={11} style={{ fontSize: 10 }} onClick={() => this.sortbycustomer()}>By Customer</ToggleButton>\r\n                              <ToggleButton value={12} style={{ fontSize: 10 }} onClick={() => this.sortbytype()}>By Type</ToggleButton>\r\n                              <ToggleButton value={13} style={{ fontSize: 10 }} onClick={() => this.sortbyday()}>By Day</ToggleButton>\r\n                              <ToggleButton value={14} style={{ fontSize: 10 }} onClick={() => this.sortbymonth()}>By Month</ToggleButton>\r\n                          </ToggleButtonGroup>\r\n                      </Col>\r\n                      <Charts data={this.state.data} title={this.state.title} xaxis={this.state.xaxis} yaxis={this.state.yaxis} graph={this.state.graph} />\r\n                  </Card>\r\n              </Card>\r\n          </Card>\r\n        </>\r\n      );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Card, Dropdown, DropdownButton, ToggleButton, ToggleButtonGroup } from 'react-bootstrap'\r\nimport Table from './Table'\r\nimport Filter from './Filter'\r\nimport NavBar from './NavBar'\r\nimport axios from 'axios'\r\n\r\nexport default class Inventory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            base: 'https://dc3so1gav1.execute-api.us-west-1.amazonaws.com/dev/api/v2/',\r\n            columns: [],\r\n            search_c: '',\r\n            search_d: '',\r\n            search_f: '',\r\n            data: [],\r\n            banks: []\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        this.excess()\r\n    }\r\n\r\n    excess = async () => {\r\n        var resp = []\r\n        var data = []\r\n        var banks = []\r\n        await axios.get(`${this.state.base}excess`)\r\n            .then(response => {\r\n                resp = response.data.result.result\r\n                console.log(resp);\r\n            })\r\n            .catch(error => console.log(error)\r\n            )\r\n\r\n        resp.map(object => {\r\n            if (!banks.includes(object.fb_name)) banks.push(object.fb_name)\r\n            if (object.fb_name === this.state.search_d || this.state.search_d === '')\r\n              data.push({\r\n                  name: object.fl_name,\r\n                  excess: object.inv_qty-object.excess,\r\n                  quantity: object.inv_qty\r\n              })\r\n        })\r\n\r\n        const columns = [\r\n            { field: 'name', headerName: 'Name', sortable: true, unSortIcon: true, filter: true, width: 450 },\r\n            { field: 'excess', headerName: 'Anticipated Usage', sortable: true, unSortIcon: true, filter: true, width: 300 },\r\n            { field: 'quantity', headerName: 'Quantity', sortable: true, unSortIcon: true, filter: true, width: 300 },\r\n        ]\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            columns: columns,\r\n            data: data,\r\n            mode: '1',\r\n            banks: banks\r\n        })\r\n    }\r\n\r\n    low = async () => {\r\n        var resp = []\r\n        var data = []\r\n        var banks = []\r\n        await axios.get(`${this.state.base}low`)\r\n            .then(response => {\r\n                resp = response.data.result.result\r\n                console.log(resp);\r\n            })\r\n            .catch(error => console.log(error)\r\n            )\r\n\r\n\r\n        resp.map(object => {\r\n            if (!banks.includes(object.fb_name)) banks.push(object.fb_name)\r\n            if (object.fb_name === this.state.search_d || this.state.search_d === '')\r\n              data.push({\r\n                  name: object.fl_name,\r\n                  excess: object.excess,\r\n                  quantity: object.inv_qty\r\n              })\r\n        })\r\n\r\n        const columns = [\r\n            { field: 'name', headerName: 'Name', sortable: true, unSortIcon: true, filter: true, width: 450 },\r\n            { field: 'excess', headerName: 'Low', sortable: true, unSortIcon: true, filter: true, width: 300 },\r\n            { field: 'quantity', headerName: 'Quantity', sortable: true, unSortIcon: true, filter: true, width: 300 },\r\n        ]\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            columns: columns,\r\n            data: data,\r\n            mode: '2',\r\n            banks: banks\r\n        })\r\n    }\r\n\r\n    zero = async () => {\r\n        var resp = []\r\n        var data = []\r\n        var banks = []\r\n        await axios.get(`${this.state.base}zero`)\r\n            .then(response => {\r\n                resp = response.data.result.result\r\n                console.log(resp);\r\n            })\r\n            .catch(error => console.log(error)\r\n            )\r\n\r\n        resp.map(object => {\r\n            if (!banks.includes(object.fb_name)) banks.push(object.fb_name)\r\n            if (object.fb_name === this.state.search_d || this.state.search_d === '')\r\n              data.push({\r\n                  name: object.fl_name,\r\n              })\r\n        })\r\n\r\n        const columns = [\r\n            { field: 'name', headerName: 'Name', sortable: true, unSortIcon: true, filter: true, width: 1050 },\r\n        ]\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            columns: columns,\r\n            data: data,\r\n            mode: '3',\r\n            banks: banks\r\n        })\r\n    }\r\n\r\n\r\n    changeMode = async (mode) => {\r\n        switch (mode) {\r\n            case '1':\r\n                await this.excess()\r\n                break;\r\n            case '2':\r\n                await this.low()\r\n                break;\r\n            case '3':\r\n                await this.zero()\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    updateSearch = state => {\r\n        this.setState({\r\n            ...this.state,\r\n            search_c: state.search_c,\r\n            search_d: state.search_d,\r\n            search_f: state.search_f,\r\n        })\r\n        this.changeMode(this.state.mode)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n          <>\r\n            <NavBar ddlist={this.state.banks} update={async bank => {await this.updateSearch({...this.state, search_d: bank})}}/>\r\n            <Card style={{ backgroundColor: 'rgb(226, 226, 226)', padding: '10px' }}>\r\n                <Row>\r\n                    <Col xs=\"5\">\r\n                        <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\r\n                            <ToggleButton value={1} style={{ fontSize: 15 }} onClick={(e) => this.changeMode(e.target.value)}>Excess</ToggleButton>\r\n                            <ToggleButton value={2} style={{ fontSize: 15 }} onClick={(e) => this.changeMode(e.target.value)}>Low</ToggleButton>\r\n                            <ToggleButton value={3} style={{ fontSize: 15 }} onClick={(e) => this.changeMode(e.target.value)}>Zero</ToggleButton>\r\n                        </ToggleButtonGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Filter update={this.updateSearch} ddlist={this.state.ddlist} />\r\n                </Row>\r\n                <Card style={{ padding: '10px' }}>\r\n                    <Card>\r\n                        <Table columns={this.state.columns} data={this.state.data} />\r\n                    </Card>\r\n                </Card>\r\n            </Card>\r\n          </>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\r\n\r\nimport Donors from './components/Donors'\r\nimport Orders from './components/Orders'\r\nimport Inventory from './components/Inventory'\r\n\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <div className=\"container\">\r\n            <Route exact path=\"/\">\r\n              <Redirect to=\"/donors\"/>\r\n            </Route>\r\n            <Route exact path=\"/feed-the-hungry-admin\">\r\n              <Redirect to=\"/donors\"/>\r\n            </Route>\r\n            <Route exact path=\"/donors\" component={Donors} />\r\n            <Route exact path=\"/orders\" component={Orders} />\r\n            <Route exact path=\"/inventory\" component={Inventory} />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}